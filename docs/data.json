{
    "project": {
        "name": "Ember Validators",
        "description": "A collection of EmberJS validators",
        "url": "https://github.com/summit-electric-supply/ember-cp-validations",
        "indexModule": "Validators",
        "version": "v2.1.0-beta.1"
    },
    "files": {
        "addon/utils/can-invoke.js": {
            "name": "addon/utils/can-invoke.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Ember": 1
            },
            "namespaces": {}
        },
        "addon/collection.js": {
            "name": "addon/collection.js",
            "modules": {
                "Validators": 1
            },
            "classes": {
                "Collection": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/confirmation.js": {
            "name": "addon/confirmation.js",
            "modules": {},
            "classes": {
                "Confirmation": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/date.js": {
            "name": "addon/date.js",
            "modules": {},
            "classes": {
                "Date": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/ds-error.js": {
            "name": "addon/ds-error.js",
            "modules": {},
            "classes": {
                "DS Error": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/exclusion.js": {
            "name": "addon/exclusion.js",
            "modules": {},
            "classes": {
                "Exclusion": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/format.js": {
            "name": "addon/format.js",
            "modules": {},
            "classes": {
                "Format": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/inclusion.js": {
            "name": "addon/inclusion.js",
            "modules": {},
            "classes": {
                "Inclusion": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/length.js": {
            "name": "addon/length.js",
            "modules": {},
            "classes": {
                "Length": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/messages.js": {
            "name": "addon/messages.js",
            "modules": {},
            "classes": {
                "Messages": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/number.js": {
            "name": "addon/number.js",
            "modules": {},
            "classes": {
                "Number": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/presence.js": {
            "name": "addon/presence.js",
            "modules": {},
            "classes": {
                "Presence": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "Validators": {
            "name": "Validators",
            "submodules": {},
            "elements": {},
            "classes": {
                "Ember": 1,
                "Collection": 1,
                "Confirmation": 1,
                "Date": 1,
                "DS Error": 1,
                "Exclusion": 1,
                "Format": 1,
                "Inclusion": 1,
                "Length": 1,
                "Messages": 1,
                "Number": 1,
                "Presence": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "addon/presence.js",
            "line": 7
        }
    },
    "classes": {
        "Ember": {
            "name": "Ember",
            "shortname": "Ember",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Validators"
        },
        "Collection": {
            "name": "Collection",
            "shortname": "Collection",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Validators",
            "file": "addon/collection.js",
            "line": 7
        },
        "Confirmation": {
            "name": "Confirmation",
            "shortname": "Confirmation",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Validators",
            "namespace": "",
            "file": "addon/confirmation.js",
            "line": 6
        },
        "Date": {
            "name": "Date",
            "shortname": "Date",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Validators",
            "namespace": "",
            "file": "addon/date.js",
            "line": 6
        },
        "DS Error": {
            "name": "DS Error",
            "shortname": "DS Error",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Validators",
            "namespace": "",
            "file": "addon/ds-error.js",
            "line": 6
        },
        "Exclusion": {
            "name": "Exclusion",
            "shortname": "Exclusion",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Validators",
            "namespace": "",
            "file": "addon/exclusion.js",
            "line": 6
        },
        "Format": {
            "name": "Format",
            "shortname": "Format",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Validators",
            "namespace": "",
            "file": "addon/format.js",
            "line": 7
        },
        "Inclusion": {
            "name": "Inclusion",
            "shortname": "Inclusion",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Validators",
            "namespace": "",
            "file": "addon/inclusion.js",
            "line": 6
        },
        "Length": {
            "name": "Length",
            "shortname": "Length",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Validators",
            "namespace": "",
            "file": "addon/length.js",
            "line": 5
        },
        "Messages": {
            "name": "Messages",
            "shortname": "Messages",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Validators",
            "namespace": "",
            "file": "addon/messages.js",
            "line": 3
        },
        "Number": {
            "name": "Number",
            "shortname": "Number",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Validators",
            "namespace": "",
            "file": "addon/number.js",
            "line": 5
        },
        "Presence": {
            "name": "Presence",
            "shortname": "Presence",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Validators",
            "namespace": "",
            "file": "addon/presence.js",
            "line": 7
        }
    },
    "elements": {},
    "classitems": [
        {
            "file": "addon/utils/can-invoke.js",
            "line": 1,
            "description": "Checks to see if the `methodName` exists on the `obj`.\n```javascript\nlet foo = { bar: function() { return 'bar'; }, baz: null };\nEmber.canInvoke(foo, 'bar'); // true\nEmber.canInvoke(foo, 'baz'); // false\nEmber.canInvoke(foo, 'bat'); // false\n```",
            "itemtype": "method",
            "name": "canInvoke",
            "params": [
                {
                    "name": "obj",
                    "description": "The object to check for the method",
                    "type": "Object"
                },
                {
                    "name": "methodName",
                    "description": "The method name to check for",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Ember"
        },
        {
            "file": "addon/collection.js",
            "line": 12,
            "itemtype": "method",
            "name": "validate",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "Any"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "collection",
                            "description": "",
                            "type": "Boolean"
                        }
                    ]
                },
                {
                    "name": "model",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "attribute",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "Collection",
            "module": "Validators"
        },
        {
            "file": "addon/confirmation.js",
            "line": 11,
            "itemtype": "method",
            "name": "validate",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "Any"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "on",
                            "description": "The attribute to confirm against",
                            "type": "String"
                        },
                        {
                            "name": "allowBlank",
                            "description": "If true, skips validation if the value is empty",
                            "type": "String"
                        }
                    ]
                },
                {
                    "name": "model",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "attribute",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "Confirmation",
            "module": "Validators"
        },
        {
            "file": "addon/date.js",
            "line": 11,
            "itemtype": "method",
            "name": "validate",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "Any"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "allowBlank",
                            "description": "If true, skips validation if the value is empty",
                            "type": "Boolean"
                        },
                        {
                            "name": "before",
                            "description": "The specified date must be before this date",
                            "type": "String"
                        },
                        {
                            "name": "onOrBefore",
                            "description": "The specified date must be on or before this date",
                            "type": "String"
                        },
                        {
                            "name": "after",
                            "description": "The specified date must be after this date",
                            "type": "String"
                        },
                        {
                            "name": "onOrAfter",
                            "description": "The specified date must be on or after this date",
                            "type": "String"
                        },
                        {
                            "name": "precision",
                            "description": "Limit the comparison check to a specific granularity.\n                                  Possible Options: [`year`, `month`, `week`, `day`, `hour`, `minute`, `second`].",
                            "type": "String"
                        },
                        {
                            "name": "format",
                            "description": "Input value date format",
                            "type": "String"
                        },
                        {
                            "name": "errorFormat",
                            "description": "Error output date format. Defaults to `MMM Do, YYYY`",
                            "type": "String"
                        }
                    ]
                },
                {
                    "name": "model",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "attribute",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "Date",
            "module": "Validators"
        },
        {
            "file": "addon/ds-error.js",
            "line": 11,
            "itemtype": "method",
            "name": "validate",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "Any"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "model",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "attribute",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "DS Error",
            "module": "Validators"
        },
        {
            "file": "addon/exclusion.js",
            "line": 11,
            "itemtype": "method",
            "name": "validate",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "Any"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "allowBlank",
                            "description": "If true, skips validation if the value is empty",
                            "type": "Boolean"
                        },
                        {
                            "name": "in",
                            "description": "The list of values this attribute should not be",
                            "type": "Array"
                        },
                        {
                            "name": "range",
                            "description": "The range in which the attribute's value should not reside in",
                            "type": "Array"
                        }
                    ]
                },
                {
                    "name": "model",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "attribute",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "Exclusion",
            "module": "Validators"
        },
        {
            "file": "addon/format.js",
            "line": 12,
            "itemtype": "method",
            "name": "validate",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "Any"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "allowBlank",
                            "description": "If true, skips validation if the value is empty",
                            "type": "Boolean"
                        },
                        {
                            "name": "type",
                            "description": "Can be the one of the following options [`email`, `phone`, `url`]",
                            "type": "String"
                        },
                        {
                            "name": "inverse",
                            "description": "If true, pass if the value doesn't match the given regex / type",
                            "type": "String"
                        },
                        {
                            "name": "regex",
                            "description": "The regular expression to test against",
                            "type": "Regex"
                        },
                        {
                            "name": "allowNonTld",
                            "description": "If true, the predefined regular expression `email` allows non top-level domains",
                            "type": "Boolean"
                        },
                        {
                            "name": "minTldLength",
                            "description": "The min length of the top-level domain on the predefined `email` regular expression",
                            "type": "Number"
                        }
                    ]
                },
                {
                    "name": "model",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "attribute",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "Format",
            "module": "Validators"
        },
        {
            "file": "addon/inclusion.js",
            "line": 11,
            "itemtype": "method",
            "name": "validate",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "Any"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "allowBlank",
                            "description": "If true, skips validation if the value is empty",
                            "type": "Boolean"
                        },
                        {
                            "name": "in",
                            "description": "The list of values this attribute could be",
                            "type": "Array"
                        },
                        {
                            "name": "range",
                            "description": "The range in which the attribute's value should reside in",
                            "type": "Array"
                        }
                    ]
                },
                {
                    "name": "model",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "attribute",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "Inclusion",
            "module": "Validators"
        },
        {
            "file": "addon/length.js",
            "line": 10,
            "itemtype": "method",
            "name": "validate",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "Any"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "allowNone",
                            "description": "If true, skips validation if the value is null or undefined. __Default: true__",
                            "type": "Boolean"
                        },
                        {
                            "name": "allowBlank",
                            "description": "If true, skips validation if the value is empty",
                            "type": "Boolean"
                        },
                        {
                            "name": "useBetweenMessage",
                            "description": "If true, uses the between error message when `max` and `min` are both set",
                            "type": "Boolean"
                        },
                        {
                            "name": "is",
                            "description": "The exact length the value can be",
                            "type": "Number"
                        },
                        {
                            "name": "min",
                            "description": "The minimum length the value can be",
                            "type": "Number"
                        },
                        {
                            "name": "max",
                            "description": "The maximum length the value can be",
                            "type": "Number"
                        }
                    ]
                },
                {
                    "name": "model",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "attribute",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "Length",
            "module": "Validators"
        },
        {
            "file": "addon/messages.js",
            "line": 8,
            "description": "Regex for matching error message placeholders",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_regex",
            "type": "{RegExp}",
            "class": "Messages",
            "module": "Validators"
        },
        {
            "file": "addon/messages.js",
            "line": 16,
            "description": "Default attribute description if one isnt passed into a validator's options",
            "itemtype": "property",
            "name": "defaultDescription",
            "type": "{String}",
            "class": "Messages",
            "module": "Validators"
        },
        {
            "file": "addon/messages.js",
            "line": 23,
            "description": "Get a description for a specific attribute. This is a hook\nfor i18n solutions to retrieve attribute descriptions from a translation",
            "itemtype": "method",
            "name": "getDescriptionFor",
            "params": [
                {
                    "name": "attribute",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Messages",
            "module": "Validators"
        },
        {
            "file": "addon/messages.js",
            "line": 35,
            "description": "Get a message with a given type",
            "itemtype": "method",
            "name": "getMessageFor",
            "params": [
                {
                    "name": "type",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Messages",
            "module": "Validators"
        },
        {
            "file": "addon/messages.js",
            "line": 46,
            "description": "Regex replace all placeholders with their given context",
            "itemtype": "method",
            "name": "formatMessage",
            "params": [
                {
                    "name": "message",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Messages",
            "module": "Validators"
        },
        {
            "file": "addon/messages.js",
            "line": 62,
            "description": "Default validation error message strings",
            "class": "Messages",
            "module": "Validators"
        },
        {
            "file": "addon/number.js",
            "line": 10,
            "itemtype": "method",
            "name": "validate",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "Any"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "allowBlank",
                            "description": "If true, skips validation if the value is empty",
                            "type": "Boolean"
                        },
                        {
                            "name": "allowNone",
                            "description": "If true, skips validation if the value is null or undefined. __Default: true__",
                            "type": "Boolean"
                        },
                        {
                            "name": "allowString",
                            "description": "If true, validator will accept string representation of a number",
                            "type": "Boolean"
                        },
                        {
                            "name": "integer",
                            "description": "Number must be an integer",
                            "type": "Boolean"
                        },
                        {
                            "name": "positive",
                            "description": "Number must be greater than or equal to 0",
                            "type": "Boolean"
                        },
                        {
                            "name": "odd",
                            "description": "Number must be odd",
                            "type": "Boolean"
                        },
                        {
                            "name": "even",
                            "description": "Number must be even",
                            "type": "Boolean"
                        },
                        {
                            "name": "is",
                            "description": "Number must be equal to this value",
                            "type": "Number"
                        },
                        {
                            "name": "lt",
                            "description": "Number must be less than this value",
                            "type": "Number"
                        },
                        {
                            "name": "lte",
                            "description": "Number must be less than or equal to this value",
                            "type": "Number"
                        },
                        {
                            "name": "gt",
                            "description": "Number must be greater than this value",
                            "type": "Number"
                        },
                        {
                            "name": "gte",
                            "description": "Number must be greater than or equal to this value",
                            "type": "Number"
                        },
                        {
                            "name": "multipleOf",
                            "description": "Number must be a multiple of this value",
                            "type": "Number"
                        }
                    ]
                },
                {
                    "name": "model",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "attribute",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "Number",
            "module": "Validators"
        },
        {
            "file": "addon/presence.js",
            "line": 12,
            "itemtype": "method",
            "name": "validate",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "Any"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "presence",
                            "description": "If true validates that the given value is not empty,\n                                  if false, validates that the given value is empty.",
                            "type": "Boolean"
                        },
                        {
                            "name": "ignoreBlank",
                            "description": "If true, treats an empty or whitespace string as not present",
                            "type": "Boolean"
                        }
                    ]
                },
                {
                    "name": "model",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "attribute",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "Presence",
            "module": "Validators"
        }
    ],
    "warnings": [
        {
            "message": "Missing item type\nDefault validation error message strings",
            "line": " addon/messages.js:62"
        }
    ]
}